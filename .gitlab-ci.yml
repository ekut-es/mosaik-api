# Use Rust docker image, see: https://hub.docker.com/_/rust/
image: rust:latest

variables:
    CARGO_HOME: $CI_PROJECT_DIR/cargo

# Caches some files for improved CI Times
cache:
  paths:
  - $CARGO_HOME
  #- ./target/


# Defines stages which are to be executed
stages:
  - format
  - build
  - test
  - coverage

# Run `cargo build` for the project with stable Rust
Rust and Cargo Version:
  stage: format  
  script:
  - rustc --version && cargo --version

Cargo Format:
  stage: format
  before_script:
  - rustup component add rustfmt
  script:
  - cargo fmt --all -- --check

Cargo Clippy:
  stage: test
  allow_failure: true
  before_script:
  - rustup component add clippy
  script:
  - cargo clippy --all-targets --all-features -- -D warnings

Cargo check:
  stage: format
  script:
  - cargo check

Build lib:
  stage: build
  script:
  - cargo build

Build examples:
  stage: test
  # artifacts:
  #   paths:
  #   - ./target/debug/examples/p2p_crust
  #   - ./target/debug/examples/p2p_libp2p
  script:
  - cargo build --examples

# Not necessary as this is just a lib
# Cargo testbuild lib:
#   stage: test
#   script:
#   - cargo build --release

Cargo-test:
  stage: test
  script:
  - cargo test
  artifacts:
    paths:
    #- target/debug/

# Error: "Failed to run tests: ASLR disable failed: EPERM: Operation not permitted"
# https://github.com/xd009642/tarpaulin/issues/146
# Cargo test coverage:
#   stage: coverage
#   before_script:
#   - cargo install cargo-tarpaulin
#   script:
#   - cargo tarpaulin
#   dependencies: 
#   - Cargo-test